

version: '3.8'
services:
  traefik:
    image: traefik:v2.11
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080" # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8080/dashboard/"]
      interval: 30s
      timeout: 5s
      retries: 3

  app:
    build: .
    image: synchrenity/app:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.synchrenity.rule=Host(`localhost`)"
      - "traefik.http.services.synchrenity.loadbalancer.server.port=8080"
    ports:
      - "8080:8080"
    environment:
      APP_ENV: production
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: synchrenity
      DB_USERNAME: root
      DB_PASSWORD_FILE: /run/secrets/db_password
      REDIS_URL: redis://redis:6379
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_FROM: noreply@synchrenity.local
      LOG_CHANNEL: stdout
      PHP_OPCACHE_VALIDATE_TIMESTAMPS: 0
      PHP_MEMORY_LIMIT: 512M
      PHP_MAX_EXECUTION_TIME: 60
    secrets:
      - db_password
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 1G
    user: "1001:1001"
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      mailhog:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    volumes:
      - ./logs:/app/storage/logs
      - ./backups:/app/storage/backups

  db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: synchrenity
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_password
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/mysql
      - ./backups:/docker-entrypoint-initdb.d

  redis:
    image: redis:7.2-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      - redis_data:/data

  mailhog:
    image: mailhog/mailhog:v1.0.1
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8025"]
      interval: 30s
      timeout: 5s
      retries: 3

  prometheus:
    image: prom/prometheus:v2.52.0
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro

  grafana:
    image: grafana/grafana-oss:11.0.0
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"
    volumes:
      - grafana_data:/var/lib/grafana

secrets:
  db_password:
    file: ./.secrets/db_password

volumes:
  db_data:
  redis_data:
  grafana_data:
